name: Xodium CI/CD

on:
  push:
    branches: [ main ]
    paths: [ "src/**" ]

permissions:
  contents: read
  packages: write

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: "${{ github.ref_name }}"
      url: "${{ steps.upload_artifact.outputs.artifact-url }}"
    outputs: { VERSION: "${{ steps.get_version.outputs.VERSION }}" }
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4.2.2

      - id: cache_deps
        name: Cache dependencies
        uses: actions/cache@v4.2.4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}


      - id: setup_rust
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48
        with:
          toolchain: stable
          components: rustfmt, clippy

      - id: build_artifact
        name: Build Artefact
        run: cargo build --release --locked --timings
        shell: bash

      - id: install_toml_cli
        name: Install toml-cli
        run: cargo install toml-cli

      - id: get_version
        name: Get Version
        run: echo "VERSION=$(toml get Cargo.toml package.version | tr -d '\"')" >> $GITHUB_OUTPUT
        shell: bash

      - id: upload_artifact
        name: Upload Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: xbim
          path: target/release/xbim
          retention-days: 7

  test:
    needs: [ build ]
    runs-on: ubuntu-latest
    environment:
      name: "${{ github.ref_name }}"
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4.2.2

      - id: setup_rust
        name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@fb51252c7ba57d633bc668f941da052e410add48
        with:
          toolchain: stable

      - id: run_tests
        name: Run Tests
        run: |
          cargo test --all --no-fail-fast
          cargo clippy --all-targets --all-features -- -D warnings
          cargo fmt --all -- --check
        shell: bash

  release:
    needs: [ build, test ]
    runs-on: ubuntu-latest
    environment:
      name: "${{ github.ref_name }}"
      url: "${{ steps.create_release.outputs.url }}"
    steps:
      - id: download_artifact
        name: Download Artefact
        uses: actions/download-artifact@v5.0.0
        with:
          name: xbim

      - id: verify_binary
        name: Verify Binary
        run: ./xbim --version
        shell: bash

      - id: create_release
        name: Create Release
        uses: softprops/action-gh-release@f82d31e53e61a962573dd0c5fcd6b446ca78871f
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          draft: ${{ contains(github.event.head_commit.message, '.draft') }}
          generate_release_notes: true
          prerelease: ${{ contains(github.event.head_commit.message, '.pre') }}
          tag_name: v${{ needs.build.outputs.VERSION }}
          files: xbim
